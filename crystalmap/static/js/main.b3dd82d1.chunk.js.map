{"version":3,"sources":["assets/icons/marker.svg","constants.js","components/Map.js","components/IconGPS.js","components/Info.js","components/Transition.js","App.js","index.js"],"names":["module","exports","LAYERS","name","color","text","INTIAL_LAYER","MARKERS","position","layer","CENTER","MAP_HEIGHT","MAP_WIDTH","simpleCRS","L","Simple","transformation","pointerIcon","iconUrl","iconMarker","iconRetinaUrl","iconAnchor","popupAnchor","iconSize","LeafletMap","layers","activeLayer","markers","mapRef","useRef","useState","latitude","longitude","startingPosition","setStartingPosition","usePosition","enableHighAccuracy","error","useEffect","map","current","leafletElement","paramScale","URLSearchParams","window","location","search","get","scale","centerWidth","y","x","panTo","className","Map","center","zoom","minZoom","maxZoom","crs","zoomControl","attributionControl","dragging","doubleClickZoom","scrollWheelZoom","boxZoom","touchZoom","keyboard","tap","ref","LayersControl","BaseLayer","key","checked","TileLayer","url","process","marker","Marker","icon","Popup","IconGPS","viewBox","fill","xmlns","d","transition","duration","variants","show","opacity","hide","Info","children","showInfo","setShowInfo","onClick","state","div","initial","animate","exit","TRANSITION_DURATION","Transition","App","setActiveLayer","setTransition","showTransition","setShowTransition","indexCurrent","findIndex","indexNext","indexPrevious","hasNext","length","hasPrevious","setTimeout","startTransition","index","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3dd82d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marker.eab62778.svg\";","const LAYER_SPACE = \"space\";\nconst LAYER_MINDMAP = \"mindmap\";\nconst LAYER_VOLCANO = \"volcano\";\nconst LAYER_CRYSTAL = \"crystal\";\nconst LAYER_DRAWING = \"drawing\";\n\nconst LAYERS = [\n  {\n    name: LAYER_SPACE,\n    color: \"green\",\n    text: \"All things\",\n  },\n  {\n    name: LAYER_MINDMAP,\n    color: \"orange\",\n    text: \"Subterranean Air\",\n  },\n  {\n    name: LAYER_VOLCANO,\n    color: \"red\",\n    text: \"Central Fire\",\n  },\n  {\n    name: LAYER_CRYSTAL,\n    color: \"blue\",\n    text: \"Virgin Earth\",\n  },\n  {\n    name: LAYER_DRAWING,\n    color: \"purple\",\n    text: \"Fiery Water\",\n  },\n];\n\nconst INTIAL_LAYER = LAYERS[2];\n\nconst MARKERS = [\n  {\n    position: [6017, 7229],\n    layer: LAYER_VOLCANO,\n    text:\n      \"Volcano is a universal symbol of inner growth and awareness through a slow traumatic cycle of continuous transformation. To gain a sense of how the human body was formed over millions of years through successive generations of an evolutionary chain, visit an active volcano. Feel its ground heat and try to imagine its concealed inner world.\",\n  },\n  {\n    position: [7017, 5580],\n    layer: LAYER_VOLCANO,\n    text:\n      \"Rising out of the surface of the land or the water they remain connected to the very centre of the earth. This is a key to their enigmatic power. In the depths of the world, in fire, metals, crystals and rocks, and finally also in air, the volcano has access to all the elements of alchemical transformation.\",\n  },\n  {\n    position: [3253, 9336],\n    layer: LAYER_VOLCANO,\n    text:\n      \"The laughter of a witch crackles with burning red sulphur. I heard her song from the depths of the crater. It was a howl of galactic wind. Lava imprinted her forgotten language for an eternity of unfixed amorphous change.\",\n  },\n  {\n    position: [7248, 9964],\n    layer: LAYER_VOLCANO,\n    text:\n      \"Shadows are witches vibrating their homeopathic messages to ground them in the human world as available cures. Never touch it.\",\n  },\n  {\n    position: [8766, 4478],\n    layer: LAYER_VOLCANO,\n    text:\n      \"A person’s thought is continually active in the same way that a living volcano. Ideas, feelings and memory are a continuously occurring subterranean activity and a pulsing font of language.\",\n  },\n  {\n    position: [6309, 7854],\n    layer: LAYER_CRYSTAL,\n    text:\n      \"Crystals form from solutes of dream, acetate memories of a time earlier than motion, premonitions of a future after every past life. The mineral residue of once living organisms form into clusters of crystal reality. The growth of crystal faces occurs in layers. As magma cools, the crystals grow and eventually touch each other.\",\n  },\n  {\n    position: [4084, 4841],\n    layer: LAYER_CRYSTAL,\n    text:\n      \"Chemical polarity and crystallization conditions – temperature, air pressure, and fluid evaporation time from gas, from freezing air, from aqueous solutions and solvents – lead to a variety of crystal growth; polyhedral, lamellar, needle, skeletal, dendritic, pencil structures. Astrogeology hidden in caverns, turning the air silver blue white, darkness of the night and the true silence of the sea.\",\n  },\n  {\n    position: [7242, 11711],\n    layer: LAYER_CRYSTAL,\n    text:\n      \"In Russia we have two words for “thing”, we have Predmet, which conveys the object as inanimate, but we also have Veshch which conveys the thing as having the presence of a soul and therefore a living agency.\",\n  },\n  {\n    position: [2134, 10162],\n    layer: LAYER_CRYSTAL,\n    text:\n      \"19th century Russian scientist Vladimir Vernadsky refused any sharp distinction between our selves and the physical, alchemical matter of our world.  Describing humans as “walking, talking minerals”, Vernadsky believed that our physical and mental wellbeing depends on the materiality that our bodies share in communication with the world around us.\",\n  },\n  {\n    position: [10953, 3346],\n    layer: LAYER_CRYSTAL,\n    text:\n      \"All cities are geological. You can’t take three steps without encountering ghosts bearing all the prestige of their legends. We move within a closed landscape whose landmarks constantly draw us toward the past. Certain shifting angles, certain receding perspectives, allow us to glimpse original conceptions of space, but this vision remains fragmentary.\",\n  },\n];\n\nconst TRANSITION_DURATION = 550;\n\nexport { LAYERS, INTIAL_LAYER, MARKERS, TRANSITION_DURATION };\n\nexport default null;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { usePosition } from \"use-position\";\nimport { Map, LayersControl, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport * as L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport iconMarker from \"../assets/icons/marker.svg\";\n\nconst MAP_WIDTH = 15084;\nconst MAP_HEIGHT = 12595;\nconst CENTER = [MAP_HEIGHT / 2, MAP_WIDTH / 2];\nconst ZOOM_LEVEL = 5;\n\nconst simpleCRS = L.extend({}, L.CRS.Simple, {\n  transformation: new L.Transformation(1 / 64, 0, 1 / 64, 0),\n});\n\nconst pointerIcon = new L.Icon({\n  iconUrl: iconMarker,\n  iconRetinaUrl: iconMarker,\n  iconAnchor: [20, 20],\n  popupAnchor: [0, -20],\n  iconSize: [40, 40],\n});\n\nconst LeafletMap = ({ layers, activeLayer, markers }) => {\n  const mapRef = useRef();\n  const [startingPosition, setStartingPosition] = useState({\n    latitude: null,\n    longitude: null,\n  });\n  const { latitude, longitude, error } = usePosition(true, {\n    enableHighAccuracy: true,\n  });\n\n  useEffect(() => {\n    if (!startingPosition.latitude && !startingPosition.longitude) {\n      setStartingPosition({\n        latitude,\n        longitude,\n      });\n    } else {\n      const map = mapRef.current.leafletElement;\n      const params = new URLSearchParams(window.location.search);\n      const paramScale = params.get(\"scale\");\n      const scale = paramScale ?? 5000000;\n      const [centerHeight, centerWidth] = CENTER;\n      const offsetX = (startingPosition.latitude - latitude) * scale;\n      const offsetY = (startingPosition.longitude - longitude) * scale;\n      const y = centerHeight + offsetX;\n      const x = centerWidth + offsetY;\n      map.panTo([y, x]);\n    }\n  }, [\n    startingPosition.latitude,\n    startingPosition.longitude,\n    latitude,\n    longitude,\n  ]);\n\n  return (\n    <>\n      {error && <div className=\"error-gps\">Unable to get gps location</div>}\n      <Map\n        center={CENTER}\n        zoom={ZOOM_LEVEL}\n        minZoom={ZOOM_LEVEL}\n        maxZoom={ZOOM_LEVEL}\n        crs={simpleCRS}\n        zoomControl={false}\n        attributionControl={false}\n        dragging={false}\n        doubleClickZoom={false}\n        scrollWheelZoom={false}\n        boxZoom={false}\n        touchZoom={false}\n        keyboard={false}\n        tap={false}\n        ref={mapRef}\n        className=\"map\"\n      >\n        <LayersControl>\n          {layers.map((layer) => {\n            return (\n              <LayersControl.BaseLayer\n                key={layer.name}\n                name={layer.name}\n                checked={layer.name === activeLayer.name}\n              >\n                <TileLayer\n                  url={`${process.env.PUBLIC_URL}/tiles/${layer.name}/{z}/{x}/{y}.png`}\n                />\n              </LayersControl.BaseLayer>\n            );\n          })}\n        </LayersControl>\n        {markers.map((marker) => {\n          if (marker.layer !== activeLayer.name) return null;\n          return (\n            <Marker position={marker.position} icon={pointerIcon}>\n              <Popup>{marker.text}</Popup>\n            </Marker>\n          );\n        })}\n      </Map>\n    </>\n  );\n};\n\nexport default LeafletMap;\n","import React from \"react\";\n\nconst IconGPS = () => (\n  <svg\n    className=\"icon-gps\"\n    viewBox=\"0 0 100 100\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M50 0l50 100H0L50 0z\" />\n  </svg>\n);\n\nexport default IconGPS;\n","import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nconst transition = {\n  duration: 0.35,\n};\n\nconst variants = {\n  show: {\n    scale: 1,\n    opacity: 1,\n    transition,\n  },\n  hide: {\n    scale: 0,\n    opacity: 0,\n    transition,\n  },\n};\n\nconst Info = ({ children }) => {\n  const [showInfo, setShowInfo] = useState(false);\n\n  return (\n    <>\n      <button\n        className=\"info-toggle\"\n        onClick={() => setShowInfo((state) => !state)}\n      />\n      <AnimatePresence>\n        {showInfo && (\n          <motion.div\n            variants={variants}\n            initial=\"hide\"\n            animate=\"show\"\n            exit=\"hide\"\n            className=\"info-overlay\"\n          >\n            <div className=\"info-overlay__content\">{children}</div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { TRANSITION_DURATION } from \"../constants\";\n\nconst transition = {\n  duration: TRANSITION_DURATION / 1000,\n};\n\nconst variants = {\n  show: {\n    opacity: 1,\n    transition,\n  },\n  hide: {\n    opacity: 0,\n    transition,\n  },\n};\n\nconst Transition = ({ show, color, children }) => {\n  return (\n    <AnimatePresence initial={false}>\n      {show && (\n        <motion.div\n          variants={variants}\n          initial=\"hide\"\n          animate=\"show\"\n          exit=\"hide\"\n          className={`transition-screen ${color}`}\n        >\n          {children}\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default Transition;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  LAYERS,\n  INTIAL_LAYER,\n  MARKERS,\n  TRANSITION_DURATION,\n} from \"./constants\";\nimport Map from \"./components/Map\";\nimport IconGPS from \"./components/IconGPS\";\nimport Info from \"./components/Info\";\nimport Transition from \"./components/Transition\";\n\nfunction App() {\n  const [activeLayer, setActiveLayer] = useState(INTIAL_LAYER);\n  const [transition, setTransition] = useState(INTIAL_LAYER);\n  const [showTransition, setShowTransition] = useState(true);\n\n  const indexCurrent = LAYERS.findIndex((layer) => layer === activeLayer);\n  const indexNext = indexCurrent + 1;\n  const indexPrevious = indexCurrent - 1;\n  const hasNext = indexNext < LAYERS.length;\n  const hasPrevious = indexPrevious >= 0;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShowTransition(false);\n    }, TRANSITION_DURATION * 2);\n  }, []);\n\n  const startTransition = (index) => {\n    setTransition(LAYERS[index]);\n    setShowTransition(true);\n    setTimeout(() => {\n      setActiveLayer(LAYERS[index]);\n    }, TRANSITION_DURATION);\n    setTimeout(() => {\n      setShowTransition(false);\n    }, TRANSITION_DURATION * 2);\n  };\n\n  return (\n    <>\n      <div className=\"controls\">\n        <button\n          onClick={() => hasNext && startTransition(indexNext)}\n          disabled={!hasNext}\n        >\n          +\n        </button>\n        <button\n          onClick={() => hasPrevious && startTransition(indexPrevious)}\n          disabled={!hasPrevious}\n        >\n          ⁠–\n        </button>\n      </div>\n      <Transition show={showTransition} color={transition.color}>\n        {transition.text}\n      </Transition>\n      <Info>\n        <h1>Crystal Map</h1>\n        <p>\n          “At the end I want to speak at length of one of the basic laws of\n          Mount Analogue, To reach the summit, one must proceed from encampment\n          to encampment. But before setting out for the next refuge, one must\n          prepare those coming after the occupy the place one is leaving. Only\n          after having prepared them can one go on up. That is why, before\n          setting out for a new refuge, we had to go back down in order to pass\n          on our knowledge to other seeker.”\n        </p>\n      </Info>\n      <IconGPS />\n      <Map layers={LAYERS} activeLayer={activeLayer} markers={MARKERS} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}